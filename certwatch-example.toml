# certwatch Example Configuration
#
# This file provides a comprehensive, well-documented template for configuring
# the certwatch application. Each setting is explained, and default values are
# provided where applicable. To use this file, rename it to 'certwatch.toml'
# and place it in the application's working directory, or specify its path
# using the --config-file / -c command-line argument.

# ==============================================================================
# [core] - Core Application Settings
# ==============================================================================
[core]

# log_level: Controls the verbosity of the application's logs.
# Valid options are: "trace", "debug", "info", "warn", "error".
# Default: "info"
log_level = "info"

# concurrency: The number of concurrent worker tasks for processing domains.
# A higher number can improve performance on multi-core systems but will
# increase resource usage.
# Default: The number of logical CPU cores on the system.
# concurrency = 16


# ==============================================================================
# [performance] - Performance Tuning
# ==============================================================================
[performance]

# queue_capacity: The maximum number of items to hold in internal channels.
# This includes the channel for incoming domains from CertStream and the
# channel for alerts pending notification. A larger queue can absorb bursts
# of activity but will consume more memory.
# Default: 100,000
queue_capacity = 100000


# ==============================================================================
# [network] - CertStream Network Client
# ==============================================================================
[network]

# certstream_url: The WebSocket URL of the CertStream server to connect to.
# This is a required setting. You can should run your own server
# (certstream-server-go, or certstream-server).
# Default: "wss://127.0.0.1:8181/domains-only"
certstream_url = "wss://127.0.0.1:8181/domains-only"

# sample_rate: A value between 0.0 and 1.0 that determines what percentage
# of the certificate stream to process. 1.0 means 100% of certificates will
# be processed, while 0.1 means 10% will be processed. This can be useful
# for reducing load when monitoring high-volume streams.
# Default: 1.0
sample_rate = 1.0

# allow_invalid_certs: Whether to process certificates that are considered
# invalid (e.g., expired, self-signed). In most security monitoring use
# cases, this should be `false`.
# Default: false
allow_invalid_certs = false


# ==============================================================================
# [rules] - Rule-Based Filtering
# ==============================================================================
[rules]

# rule_files: A list of paths to YAML files containing detection rules.
# The application will load all specified rule files to filter and identify
# interesting domains. This is the primary mechanism for detection.
# Example: rule_files = ["rules/phishing.yml", "rules/suspicious-tlds.yml"]
# Default: None (no rules are loaded by default)
rule_files = []


# ==============================================================================
# [dns] - DNS Resolution Settings
# ==============================================================================
[dns]

# resolver: The IP address and port of the DNS resolver to use for queries.
# If this is not specified, the application will use the system's default
# DNS configuration.
# Example: "8.8.8.8:53" for Google's public DNS.
# Default: System default DNS

# timeout_ms: The timeout in milliseconds for a single DNS query. If a
# query takes longer than this, it will be considered failed.
# Default: 5000 (5 seconds)
timeout_ms = 5000

# --- DNS Retry and Backoff ---
# These settings control how the application retries failed DNS queries.
# It uses separate strategies for standard failures (e.g., timeouts) and
# NXDOMAIN (non-existent domain) responses.

# standard_retries: The number of times to retry a standard DNS failure.
# Default: 3
# standard_retries = 3

# standard_initial_backoff_ms: The initial delay in milliseconds before the
# first retry for a standard failure. The delay increases exponentially.
# Default: 500
# standard_initial_backoff_ms = 500

# nxdomain_retries: The number of times to retry a query that resulted in
# an NXDOMAIN response. This is often higher to handle domains that may
# appear in certificate logs before their DNS records have propagated.
# Default: 5
# nxdomain_retries = 5

# nxdomain_initial_backoff_ms: The initial backoff for NXDOMAIN retries.
# This is typically longer to avoid spamming resolvers for domains that
# are unlikely to exist yet.
# Default: 10000 (10 seconds)
# nxdomain_initial_backoff_ms = 10000

# --- DNS Health Monitoring ---
# These settings configure the DNS health monitor, which can detect if the
# configured DNS resolver is failing and pause queries to avoid errors.
[dns.health]

# failure_threshold: The failure rate (0.0 to 1.0) within the time window
# that will trigger the DNS resolver to be marked as "unhealthy".
# For example, 0.95 means if 95% of queries fail, the monitor trips.
# Default: 0.95
failure_threshold = 0.95

# window_seconds: The time window in seconds over which to calculate the
# failure rate.
# Default: 120 (2 minutes)
window_seconds = 120

# recovery_check_domain: A known-good domain (like "google.com") to query
# periodically to check if a failing DNS resolver has recovered.
# Default: "google.com"
recovery_check_domain = "google.com"

# recovery_check_interval_seconds: How often (in seconds) to query the
# recovery_check_domain when the resolver is marked as unhealthy.
# Default: 10
recovery_check_interval_seconds = 10


# ==============================================================================
# [enrichment] - IP Address Enrichment
# ==============================================================================
[enrichment]

# asn_tsv_path: The file path to a TSV (Tab-Separated Values) file for
# enriching IP addresses with ASN (Autonomous System Number) information.
# This is required for rules that filter based on ASN details.
# The file should have columns: CIDR, AS_Number, AS_Name, Country_Code, Description.
# A compatible dataset can be found at https://iptoasn.com.
# Default: None
asn_tsv_path = "data/enrichment/ip2asn-combined.tsv"


# ==============================================================================
# [output] - Output and Alerting
# ==============================================================================
[output]

# format: The format for alerts printed to standard output (stdout).
# Options: "Json" (machine-readable) or "PlainText" (human-readable).
# Default: "Json"
format = "PlainText"

# --- Slack Notifications ---
# To enable Slack notifications, you must provide a webhook URL.
[output.slack]

# enabled: Set to `true` to enable sending alerts to Slack.
# If this is `false` or commented out, no Slack notifications will be sent.
# Default: false
# enabled = false

# webhook_url: The incoming webhook URL provided by Slack. This is required
# if Slack notifications are enabled.
# Default: None
# webhook_url = "https://hooks.slack.com/services/..."

# batch_size: The maximum number of alerts to batch together before sending
# a notification to Slack. This helps reduce notification spam.
# Default: 7
# batch_size = 7

# batch_timeout_seconds: The maximum time in seconds to wait before sending a
# batch of alerts, even if the batch_size has not been reached. This ensures
# timely notifications.
# Default: 300 (5 minutes)
# batch_timeout_seconds = 300


# ==============================================================================
# [deduplication] - Alert Deduplication
# ==============================================================================
[deduplication]

# enabled: Set to `true` to enable alert deduplication. This prevents the
# application from sending repeated alerts for the same domain within the
# cache_ttl_seconds window.
# Default: true
enabled = true

# cache_size: The maximum number of unique alerts to store in the
# deduplication cache.
# Default: 100,000
cache_size = 100000

# cache_ttl_seconds: The time-to-live in seconds for an alert in the
# deduplication cache. An alert for the same domain will not be sent again
# until this time has passed.
# Default: 3600 (1 hour)
cache_ttl_seconds = 3600


